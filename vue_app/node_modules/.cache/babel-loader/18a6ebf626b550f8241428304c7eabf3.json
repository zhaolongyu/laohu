{"remainingRequest":"c:\\xampp\\laohu\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!c:\\xampp\\laohu\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!c:\\xampp\\laohu\\vue_app_00\\src\\components\\home\\ShopCart.vue?vue&type=script&lang=js","dependencies":[{"path":"c:\\xampp\\laohu\\vue_app_00\\src\\components\\home\\ShopCart.vue","mtime":1551058840000},{"path":"c:\\xampp\\laohu\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"c:\\xampp\\laohu\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"c:\\xampp\\laohu\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//ShopCart.vue 当组件创建成功发送 ajax请求\n//获取购物车列表\nimport { Toast } from \"mint-ui\";\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      cb: false,\n      allcb: false //保存全选复选框状态\n\n    };\n  },\n  methods: {\n    delItem: function delItem(e) {\n      var _this = this;\n\n      //e事件对象 e.target 触发事件对象button\n      //target.dataset 自定义属性集合 \n      //1:获取当前购物车id\n      var id = e.target.dataset.id;\n      var idx = e.target.dataset.idx; //下标\n      //2:发送ajax请求\n\n      var url = \"http://127.0.0.1:3000/\";\n      url += \"delCartItem?id=\" + id;\n      this.axios.get(url).then(function (result) {\n        if (result.data.code == 1) {\n          //3:获取返回结果判断是否删除成功\n          Toast(\"删除成功\"); //4:删除list对应购物车商品对象\n          //将数组中对应下标商品删除\n          //splice(数组下标,个数); 10:35\n\n          _this.list.splice(idx, 1);\n        }\n      });\n    },\n    loadMore: function loadMore() {\n      var _this2 = this;\n\n      //1:创建变量保存url\n      var url = \"http://127.0.0.1:3000/\";\n      url += \"cartlist?uid=1\"; //2:发送ajax请求\n\n      this.axios.get(url).then(function (result) {\n        //1:判断如果没有登录显示出错消息\n        if (result.data.code == -1) {\n          Toast(\"请登录\");\n          return;\n        } //1:2 没有与 vue data双向绑定 \n        //1:接收服务器程序返回数据\n        //ShopCart.vue \n\n\n        var rows = result.data.data; //修改全局购物车数量\n\n        _this2.$store.commit(\"updateCount\", rows.length); //2:为每一个商品对象添加属性cb 选中状态\n\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n            item.cb = false;\n          } //3:将最终数组赋值 list 列表    \n\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        _this2.list = rows;\n      });\n    },\n    selectAll: function selectAll(e) {\n      //全选按钮点击事件\n      //1:获取当前全选复选框状态\n      var cb = e.target.checked; //2:修改全选状态\n\n      this.allcb = cb; //2:依据全选状态修改数组中cb值\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n          item.cb = cb;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    },\n    modifyItem: function modifyItem(e) {\n      //修改\n      //1:获取当前元素下标[其中一种方式]\n      var idx = e.target.dataset.i; //2:将下标对象数组中元素cb修改当前复选状态\n\n      var checked = e.target.checked; //3:将数组中对应cb状态修改\n\n      this.list[idx].cb = checked; //4:统计购物车中商品选中数量 == list.length\n      //5:将全选状态修改为true否则为 false\n\n      var count = 0;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.list[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n\n          if (item.cb) {\n            count++;\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      if (count == this.list.length) {\n        this.allcb = true;\n      } else {\n        this.allcb = false;\n      }\n    },\n    removeItem: function removeItem() {\n      var _this3 = this;\n\n      //0:创建空字符串，为了后续接拼字符串\n      var html = \"\"; //1:遍历数组中元素\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.list[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var item = _step4.value;\n\n          //2:判断cb==true\n          if (item.cb) {\n            //3:保存id：拼字符串\n            html += item.id + \",\";\n          }\n        } //3.1:截取字符串  试一下  三 二 一\n\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      html = html.substring(0, html.length - 1); //4:发送ajax请求 删除多个商品\n\n      var url = \"http://127.0.0.1:3000/\";\n      url += \"removeMItem?ids=\" + html;\n      this.axios.get(url).then(function (result) {\n        if (result.data.code == 1) {\n          Toast(\"删除成功\");\n\n          _this3.loadMore();\n        }\n      });\n    }\n  },\n  created: function created() {\n    this.loadMore();\n  }\n};",{"version":3,"sources":["ShopCart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"app-cart\">\r\n    <div class=\"mui-card\">\r\n\t\t\t\t<div class=\"mui-card-header\">\r\n           <h3>购物车列表</h3>\r\n           <h4>\r\n           <!--allcb 全选状态true选中false清空-->\r\n           全选 <input type=\"checkbox\" @click=\"selectAll\" :checked=\"allcb\"/>\r\n           </h4>\r\n        </div>\r\n\t\t\t\t<div class=\"mui-card-content\">\r\n\t\t\t\t\t<div class=\"mui-card-content-inner\">\r\n\r\n\t\t\t<ul class=\"mui-table-view\">\r\n\t\t\t\t<li class=\"mui-table-view-cell mui-media\" v-for=\"(item,i) in list\" :key=\"item.id\">\r\n\t\t\t\t\t<a href=\"javascript:;\">\r\n\t\t\t\t\t\t<img class=\"mui-media-object mui-pull-left\" />\r\n\t\t\t\t\t\t<div class=\"mui-media-body\">\r\n\t\t\t\t\t\t\t<p class='mui-ellipsis'>\r\n                <!-- 购物车中商品项目 home/ShopCart.vue start-->\r\n                <input type=\"checkbox\" :checked=\"item.cb\" :data-i=\"i\" @click=\"modifyItem\"/>\r\n\t\t\t\t\t\t\t  {{item.lname}}\r\n                {{item.price}}\r\n                <!--delItem处理删除商品函数-->\r\n                <!--data-id 当前购物车id-->\r\n                <!--data-idx 当前商品下标list-->\r\n                <button @click=\"delItem\" :data-id=\"item.id\" :data-idx=\"i\">删除</button> \r\n                <!-- 购物车中商品项目 end-->   \r\n              </p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n        </ul> \r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"mui-card-footer\">\r\n          <button @click=\"removeItem\">删除选中商品</button>\r\n          小计:￥3.00\r\n        </div>\r\n\t\t\t</div>\r\n  </div>\r\n</template>\r\n<script>\r\n  //ShopCart.vue 当组件创建成功发送 ajax请求\r\n  //获取购物车列表\r\n  import {Toast} from \"mint-ui\";\r\n  export default {\r\n    data(){\r\n      return {\r\n        list:[],\r\n        cb:false,\r\n        allcb:false //保存全选复选框状态\r\n      }\r\n    },\r\n    methods:{ \r\n      delItem(e){\r\n        //e事件对象 e.target 触发事件对象button\r\n        //target.dataset 自定义属性集合 \r\n        //1:获取当前购物车id\r\n        var id =  e.target.dataset.id;\r\n        var idx = e.target.dataset.idx; //下标\r\n        //2:发送ajax请求\r\n        var url = \"http://127.0.0.1:3000/\";\r\n        url+=\"delCartItem?id=\"+id;\r\n        this.axios.get(url).then(result=>{\r\n            if(result.data.code == 1){\r\n              //3:获取返回结果判断是否删除成功\r\n              Toast(\"删除成功\");\r\n              //4:删除list对应购物车商品对象\r\n              //将数组中对应下标商品删除\r\n              //splice(数组下标,个数); 10:35\r\n              this.list.splice(idx,1);\r\n            }\r\n        })\r\n      },    \r\n      loadMore(){\r\n        //1:创建变量保存url\r\n        var url = \"http://127.0.0.1:3000/\";\r\n        url+=\"cartlist?uid=1\";\r\n        //2:发送ajax请求\r\n        this.axios.get(url).then(result=>{\r\n          //1:判断如果没有登录显示出错消息\r\n          if(result.data.code == -1){\r\n             Toast(\"请登录\");\r\n             return;\r\n          }\r\n          //1:2 没有与 vue data双向绑定 \r\n          //1:接收服务器程序返回数据\r\n          //ShopCart.vue \r\n          var rows = result.data.data;\r\n          //修改全局购物车数量\r\n          this.$store.commit(\"updateCount\",rows.length);\r\n\r\n          //2:为每一个商品对象添加属性cb 选中状态\r\n          for(var item of rows){\r\n             item.cb = false;\r\n          }\r\n          //3:将最终数组赋值 list 列表    \r\n          this.list = rows;  \r\n        });\r\n      },\r\n      selectAll(e){//全选按钮点击事件\r\n        //1:获取当前全选复选框状态\r\n        var cb = e.target.checked;\r\n        //2:修改全选状态\r\n        this.allcb = cb;\r\n        //2:依据全选状态修改数组中cb值\r\n        for(var item of this.list){\r\n          item.cb = cb;\r\n        }\r\n      },\r\n      modifyItem(e){\r\n        //修改\r\n        //1:获取当前元素下标[其中一种方式]\r\n        var idx = e.target.dataset.i;\r\n        //2:将下标对象数组中元素cb修改当前复选状态\r\n        var checked = e.target.checked;\r\n        //3:将数组中对应cb状态修改\r\n        this.list[idx].cb = checked;\r\n        //4:统计购物车中商品选中数量 == list.length\r\n        //5:将全选状态修改为true否则为 false\r\n        var count = 0;\r\n        for(var item of this.list){\r\n              if(item.cb){\r\n                count++;\r\n              }\r\n        }\r\n        if(count==this.list.length){\r\n           this.allcb = true;\r\n        }else{\r\n           this.allcb = false;\r\n        }\r\n      },\r\n      removeItem(){\r\n        //0:创建空字符串，为了后续接拼字符串\r\n        var html = \"\";\r\n        //1:遍历数组中元素\r\n        for(var item of this.list){\r\n         //2:判断cb==true\r\n         if(item.cb){\r\n          //3:保存id：拼字符串\r\n          html+=item.id+\",\";\r\n         }\r\n        }\r\n        //3.1:截取字符串  试一下  三 二 一\r\n        html = html.substring(0,html.length-1);\r\n        //4:发送ajax请求 删除多个商品\r\n        var url = \"http://127.0.0.1:3000/\";\r\n        url+=\"removeMItem?ids=\"+html;\r\n        this.axios.get(url).then(result=>{\r\n            if(result.data.code == 1){\r\n              Toast(\"删除成功\");\r\n              this.loadMore();\r\n            } \r\n        });\r\n      }\r\n    },\r\n    created() {\r\n      this.loadMore();\r\n    },\r\n  }\r\n</script>\r\n<style>\r\n</style>"],"sourceRoot":"src\\components\\home"}]}